<?php

namespace AppBundle\Entity;

/**
 * IssueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IssueRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $code
     * @param $projectCode
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findByCodeAndProjectCode($code, $projectCode)
    {
        return $this->createQueryBuilder('i')
            ->innerJoin('i.project', 'p')
            ->where('p.code = :projectCode')
            ->andWhere('i.code = :issueCode')
            ->setParameter('projectCode', $code)
            ->setParameter('issueCode', $projectCode)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * @param Project $project
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneByProjectAndOrderByCode(Project $project)
    {
        return $this->createQueryBuilder('i')
            ->innerJoin('i.project', 'p')
            ->where('p = :project')
            ->orderBy('i.code', 'DESC')
            ->setParameter('project', $project)
            ->getQuery()
            ->setMaxResults(1)
            ->getOneOrNullResult();
    }

    /**
     * @param Project $project
     * @param $q
     */
    public function findByProjectAndAllTextFields(Project $project, $q)
    {
        $queryBuilder = $this->createQueryBuilder('i')
            ->where('i.project = :project')
            ->setParameter('project', $project);

        if (!empty($q)) {
            $queryBuilder->andWhere('i.summary like :q or i.description like :q')
                ->setParameter('q', '%' . $q . '%');
        }

        return $queryBuilder->getQuery()
            ->execute();
    }
}
